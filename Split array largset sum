class Solution {
public:
    int cansplit(int mid,vector<int>&nums,int k)
    {
        int sub=0,currsum=0;
        for(int i=0;i<nums.size();i++)
        {
            currsum=currsum+nums[i];
            if(currsum>mid)
            {
                sub++;
                currsum=nums[i];
            }
        }
        if(sub+1<=k)
        return 1;
        else
        return 0;
    }
    int splitArray(vector<int>& nums, int k) {
       int l=*max_element(nums.begin(),nums.end());
       int r=accumulate(nums.begin(),nums.end(),0);
       int res;
       while(l<=r)
       {
           int mid=l+(r-l)/2;
           if(cansplit(mid,nums,k)==1)
           {
               r=mid-1;
               res=mid;
           }
           else
           l=mid+1;


       }
       return res;
        
    }
};
